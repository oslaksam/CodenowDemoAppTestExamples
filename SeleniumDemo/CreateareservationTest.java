// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class CreateareservationTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void createareservation() {
    // Test name: Create a reservation
    // Step # | name | target | value
    // 1 | open | / | 
    // Open the website
    driver.get("http://localhost:3000/");
    // 2 | setWindowSize | 1936x1056 | 
    // Resolution
    driver.manage().window().setSize(new Dimension(1936, 1056));
    // 3 | click | css=.rs-picker-toggle-value | 
    // Click on date selector
    driver.findElement(By.cssSelector(".rs-picker-toggle-value")).click();
    // 4 | click | xpath=//span[contains(.,'Today')] | 
    // Choose today
    driver.findElement(By.xpath("//span[contains(.,\'Today\')]")).click();
    // 5 | click | linkText=Select | 
    // Click on a train selector
    driver.findElement(By.linkText("Select")).click();
    // 6 | click | linkText=Sp 9301 | 
    // Choose a train
    driver.findElement(By.linkText("Sp 9301")).click();
    // 7 | click | linkText=Select | 
    // Click on a seat selector
    driver.findElement(By.linkText("Select")).click();
    // 8 | click | linkText=Coach 1 / Seat 21 | 
    // Choose a seat
    driver.findElement(By.linkText("Coach 1 / Seat 21")).click();
    // 9 | click | name=firstName | 
    // Click on the name input field
    driver.findElement(By.name("firstName")).click();
    // 10 | type | name=firstName | Sony
    // Type in the name
    driver.findElement(By.name("firstName")).sendKeys("Sony");
    // 11 | click | name=lastName | 
    // Click on the surname input field
    driver.findElement(By.name("lastName")).click();
    // 12 | type | name=lastName | Pony
    // Type in the surname
    driver.findElement(By.name("lastName")).sendKeys("Pony");
    // 13 | click | name=email | 
    // Click on the surname email field
    driver.findElement(By.name("email")).click();
    // 14 | type | name=email | sony.pony@gmail.com
    // Type in the email
    driver.findElement(By.name("email")).sendKeys("sony.pony@gmail.com");
    // 15 | click | name=file | 
    // Click on the choose file button
    driver.findElement(By.name("file")).click();
    // 16 | type | name=file | C:\fakepath\Experiences_of_Test_Automation.bibtex
    // Type in the path to the selected file
    driver.findElement(By.name("file")).sendKeys("C:\\fakepath\\Experiences_of_Test_Automation.bibtex");
    // 17 | click | xpath=//button[contains(.,'Submit')] | 
    // Click on the submit button
    driver.findElement(By.xpath("//button[contains(.,\'Submit\')]")).click();
    // 18 | assertAlert | Reservation created successfully | 
    // Assert that the reservation was created successfully
    assertThat(driver.switchTo().alert().getText(), is("Reservation created successfully"));
  }
}
