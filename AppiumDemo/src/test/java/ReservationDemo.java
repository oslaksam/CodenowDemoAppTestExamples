import com.github.javafaker.Faker;
import io.appium.java_client.android.AndroidDriver;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.openqa.selenium.*;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import static org.junit.Assert.assertEquals;

public class ReservationDemo {
    private AndroidDriver driver;
    private Faker faker;

    @Before
    public void before() throws MalformedURLException {
        DesiredCapabilities caps = new DesiredCapabilities();
        //caps.setCapability("VERSION", "10.0");
        caps.setCapability("deviceName", "emulator-5554");
        caps.setCapability("platformName", "Android");
        caps.setCapability("browserName", "chrome");
        caps.setCapability("chromedriverExecutable", "C:\\Users\\oslaksam\\Documents\\CODENOW\\chromedriver.exe");
        driver = new AndroidDriver(new URL("http://0.0.0.0:4723/wd/hub"), caps);
        faker = new Faker();

    }

    @Test
    public void createReservation() {
        // Generated by Selenium IDE
        // Test name: Create a reservation
        // Step # | name | target | value
        // 1 | open | / |
        // Open the website
        driver.get("https://demo-app-fe.vercel.app/");
        // 2 | setWindowSize | 1920x1080 |
        // Resolution
        //driver.manage().window().setSize(new Dimension(1920, 1080));
        // 3 | click | css=.rs-picker-toggle-value |
        // Click on date selector
        driver.findElement(By.cssSelector(".rs-picker-toggle-value")).click();
        // 4 | click | xpath=//span[contains(.,'Today')] |
        // Choose today
        driver.findElement(By.xpath("//span[contains(.,'Today')]")).click();
        // 5 | click | linkText=Select |
        // Click on a train selector
        driver.findElement(By.linkText("Select")).click();
        // 6 | click | linkText=Sp 9301 |
        // Choose a train
        int randomValue = (int) Math.floor(Math.random() * (4 - 1 + 1) + 1);
        driver.findElement(By.cssSelector("div:nth-child(" + randomValue + ") > .rs-picker-select-menu-item")).click();
        // 7 | click | linkText=Select |
        // Click on a seat selector
        driver.findElement(By.linkText("Select")).click();
        // 8 | click | linkText=Coach 1 / Seat 21 |
        // Choose a seat
        randomValue = (int) Math.floor(Math.random() * (7 - 1 + 1) + 1);
        driver.findElement(By.cssSelector("div:nth-child(" + randomValue + ") > .rs-picker-select-menu-item")).click();
        // 9 | click | name=firstName |
        // Click on the name input field
        driver.findElement(By.name("firstName")).click();
        // 10 | type | name=firstName | Sony
        // Type in the name
        driver.findElement(By.name("firstName")).sendKeys(faker.name().firstName());
        // 11 | click | name=lastName |
        // Click on the surname input field
        driver.findElement(By.name("lastName")).click();
        // 12 | type | name=lastName | Pony
        // Type in the surname
        driver.findElement(By.name("lastName")).sendKeys(faker.name().lastName());
        // 13 | click | name=email |
        // Click on the surname email field
        driver.findElement(By.name("email")).click();
        // 14 | type | name=email | sony.pony@gmail.com
        // Type in the email
        WebElement element = driver.findElement(By.name("email"));
        JavascriptExecutor jse = (JavascriptExecutor)driver;
        String email = (faker.internet().safeEmailAddress());
        String script = "arguments[0].value='"+email+"';";
        jse.executeScript(script, element);
        //driver.findElement(By.name("email")).);
        // 15 | type | name=file | C:\fakepath\Experiences_of_Test_Automation.bibtex
        // Type in the path to the selected file
        //driver.findElement(By.name("file")).sendKeys("C:\\Users\\oslaksam\\Documents\\CODENOW\\SeleniumDemo\\randomFile.bibtex");
        // 16 | click | xpath=//button[contains(.,'Submit')] |
        // Click on the submit button
        driver.findElement(By.xpath("//button[contains(.,'Submit')]")).click();
        // 17 | assertAlert | Reservation created successfully |
        // Wait for an alert and assert that the reservation was created successfully
        Alert foo = new WebDriverWait(driver, Duration.ofSeconds(3))
                .until(driver -> driver.switchTo().alert());
        assertEquals(foo.getText(), "Reservation created successfully");
    }

    @After
    public void tearDown() {
        driver.quit();
    }
}
